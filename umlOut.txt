_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________

_____________________________________________________________________________________
_____________________________________________________________________________________
Game
------------------
batch: SpriteBatch
cam: OrthographicCamera
map: ClientGameMap
assets: AssetManager
atlas: TextureAtlas
gs: GameState
ks: KeyboardState
clientId: int
s: Settings
details: MapDetails
debug: boolean
debugFromStart: boolean
b2dr: Box2DDebugRenderer
debugMatrix: Matrix4
------------------
<<constructor>>(Settings, GameState, KeyboardState, MapDetails)
create(): void
render(): void
dispose(): void
resize(int, int): void
loadAssets(): void
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientGameMap
------------------
world: World
entityManager: ClientEntityManager
details: MapDetails
mapSprite: Sprite
spaceSprite: Sprite
player: ClientCharacter
------------------
<<constructor>>(MapDetails, Settings)
initialize(Settings): void
getEntityManager(): ClientEntityManager
update(float, GameState): void
draw(SpriteBatch): void
getPlayer(): ClientCharacter
_____________________________________________________________________________________
_____________________________________________________________________________________
CharacterType
------------------
"npc"): 3,
------------------
addAnimation(name, "attack", "side", 3, 3, true): =
addAnimation(name, "attack", "side", 3, 3, false): =
addAnimation(name, "attack", "front", 3, 3, false): =
addAnimation(name, "attack", "back", 3, 3, false): =
addAnimation(name, "attack", "front, 3, 3, true): =
addAnimation(name, "attack", "front, 3, 3, false): =
addAnimation(name, "attack", "back, 3, 3, true): =
addAnimation(name, "attack", "back, 3, 3, false): =
addAnimation(name, "walk", "side", standFrame, runFrameCount, true): =
walkLeft.get(standFrame): =
addAnimation(name, "walk", "side", standFrame, runFrameCount, false): =
walkRight.get(standFrame): =
addAnimation(name, "walk", "front", standFrame, runFrameCount, false): =
walkFront.get(standFrame): =
addAnimation(name, "walk", "back", standFrame, runFrameCount, false): =
walkBack.get(standFrame): =
addAnimation(name, "walk", "front, standFrame, runFrameCount, true): =
walkFrontLeft.get(standFrame): =
addAnimation(name, "walk", "front, standFrame, runFrameCount, false): =
walkFrontRight.get(standFrame): =
addAnimation(name, "walk", "back, standFrame, runFrameCount, true): =
walkBackLeft.get(standFrame): =
addAnimation(name, "walk", "back, standFrame, runFrameCount, false): =
walkBackRight.get(standFrame): =
addAnimation(String, String, String, int, int, boolean): Array<AtlasSprite>
getAttackLeft(): Array<AtlasSprite>
getAttackFrontLeft(): Array<AtlasSprite>
getAttackFront(): Array<AtlasSprite>
getAttackFrontRight(): Array<AtlasSprite>
getAttackRight(): Array<AtlasSprite>
getAttackBack(): Array<AtlasSprite>
getAttackBackLeft(): Array<AtlasSprite>
getAttackBackRight(): Array<AtlasSprite>
getWalkLeft(): Array<AtlasSprite>
getWalkFrontLeft(): Array<AtlasSprite>
getWalkFront(): Array<AtlasSprite>
getWalkFrontRight(): Array<AtlasSprite>
getWalkRight(): Array<AtlasSprite>
getWalkBack(): Array<AtlasSprite>
getWalkBackLeft(): Array<AtlasSprite>
getWalkBackRight(): Array<AtlasSprite>
getStandLeft(): Sprite
getStandFrontLeft(): Sprite
getStandFront(): Sprite
getStandFrontRight(): Sprite
getStandRight(): Sprite
getStandBack(): Sprite
getStandBackLeft(): Sprite
getStandBackRight(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientCharacter
------------------
EAST: SOUTHEAST,
directionArray: Direction[]
type: CharacterType
frameIndex: int
frameTime: float
direction: Direction
charMovement: boolean
degrees: float
x: float
y: float
health: int
maxHealth: int
xscale: float
yscale: float
rotation: int
trigger: ActionTrigger
fallCount: int
prevFrameIndex: float
directionDelta: float
spinningDegrees: float
fallingScale: float
ogSpriteWidth: float
ogSpriteHeight: float
------------------
<<constructor>>(CharacterType)
update(float, CharacterState): void
updateDirection(): void
getFrame(): Sprite
getHealthBar(): Sprite
getWalkFrame(): Sprite
getStandFrame(): Sprite
getAttackFrame(): Sprite
compareTo(ClientCharacter): int
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientSpawner
------------------
FOOT_PHYSICS: short
ATTACK_PHYSICS: short
WORLD_PHYSICS: short
BOUNDING_BODY_PHYSICS: short
------------------
spawn(Class<T>, float, float): T
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientNpc
------------------
------------------
<<constructor>>()
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientEntityManager
------------------
charactersUpdateOrder: ArrayList<ClientCharacter>
charactersYOrder: ArrayList<ClientCharacter>
skills: ArrayList<ClientSkill>
flameCounter: float
------------------
<<constructor>>()
add(ClientCharacter): void
updateAll(float, CharacterState, SkillState): void
drawAll(SpriteBatch): void
updateSkillsList(SkillState): void
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientKnight
------------------
------------------
<<constructor>>()
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientWizard
------------------
------------------
<<constructor>>()
_____________________________________________________________________________________
_____________________________________________________________________________________
DeadFlameAnimation
------------------
flames: ArrayList<Sprite>
------------------
initialize(): void
getFlame(int): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientArcher
------------------
------------------
<<constructor>>()
_____________________________________________________________________________________
_____________________________________________________________________________________
GameInput
------------------
ks: KeyboardState
------------------
<<constructor>>(KeyboardState)
keyDown(int): boolean
keyUp(int): boolean
keyTyped(char): boolean
touchDown(int, int, int, int): boolean
touchUp(int, int, int, int): boolean
touchDragged(int, int, int): boolean
mouseMoved(int, int): boolean
scrolled(int): boolean
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientSlash
------------------
------------------
<<constructor>>(float, float, float)
<<constructor>>ClientSlash(float, float, float)
update(SkillState): void
getFrame(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientHealthBars
------------------
bars: ArrayList<Sprite>
------------------
initialize(): void
getAppropriateHealthBar(float): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientFireBall
------------------
------------------
<<constructor>>(float, float, float)
<<constructor>>ClientFireBall(float, float, float)
update(SkillState): void
getFrame(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientSkillAnimations
------------------
arrowSprite: Sprite
fireBallSprite: Sprite
------------------
getArrow(): Sprite
getFireBall(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientArrow
------------------
sprite: Sprite
------------------
<<constructor>>(float, float, float)
<<constructor>>ClientArrow(float, float, float)
update(SkillState): void
getFrame(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
ClientSkill
------------------
x: float
y: float
direction: float
type: SkillType
------------------
<<constructor>>(float, float, float, SkillType)
update(SkillState): void
getFrame(): Sprite
_____________________________________________________________________________________
_____________________________________________________________________________________
DebuggingContact
------------------
------------------
beginContact(Contact): void
endContact(Contact): void
preSolve(Contact, Manifold): void
postSolve(Contact, ContactImpulse): void
_____________________________________________________________________________________
_____________________________________________________________________________________
Host_Controller
------------------
------------------
_____________________________________________________________________________________
_____________________________________________________________________________________
Launcher
------------------
------------------
launchGui(String[]): void
start(final): void
_____________________________________________________________________________________
_____________________________________________________________________________________
Settings_Controller
------------------
set: GridPane
right: Button
left: Button
choice: Label
calibrate: Button
clickedR: int
clickedL: int
------------------
initialize(): void
fadeInTransition(): void
handle(Event): void
loadMainScene(): void
_____________________________________________________________________________________
_____________________________________________________________________________________
MultiPlayer_Controller
------------------
background: BorderPane
------------------
fadeInTransition(): void
handle(Event): void
_____________________________________________________________________________________
_____________________________________________________________________________________
Quote_Controller
------------------
pane: GridPane
------------------
initialize(URL, ResourceBundle): void
fadeInTransition(): void
_____________________________________________________________________________________
_____________________________________________________________________________________
MainMenu_Controller
------------------
img: ImageView
back: GridPane
right: Button
left: Button
clickedR: int
clickedL: int
choseCharacter: int
------------------
handle(ActionEvent): void
makeFadeOutGame(): void
makeFadeOutSettings(): void
loadSettingsScene(): void
makeFadeOutMultiPlayer(): void
loadMultiPlayerScene(): void
_____________________________________________________________________________________
_____________________________________________________________________________________
DesktopLauncher
------------------
es: ExecutorService
s: Settings
server: GameServer
client: GameClient
terminalMode: boolean
------------------
(String[]): main
soloPlay(): void
hostPlay(): void
clientPlay(MapDetails): void
connectButtonHit(String, int): void
clientTerminalLauncher(): void
startListeningButtonHit(): void
countButtonHit(): int
startButtonHit(): void
serverTerminalLauncher(): void
printMessages(): void
_____________________________________________________________________________________
